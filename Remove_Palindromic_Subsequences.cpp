/*
1332. Remove Palindromic Subsequences

You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

Return the minimum number of steps to make the given string empty.

A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

A string is called palindrome if is one that reads the same backward as well as forward.

 Example 1:

Input: s = "ababa"
Output: 1
Explanation: s is already a palindrome, so its entirety can be removed in a single step.
Example 2:

Input: s = "abb"
Output: 2
Explanation: "abb" -> "bb" -> "". 
Remove palindromic subsequence "a" then "bb".
Example 3:

Input: s = "baabb"
Output: 2
Explanation: "baabb" -> "b" -> "". 
Remove palindromic subsequence "baab" then "b".
 

Constraints:

1 <= s.length <= 1000
s[i] is either 'a' or 'b'.
*/
class Solution {
public:
    int isPalindrome(string s)
    {             int size=s.size()-1;
               for(int i=0;i<s.size();i++)
               {
                        if(s[i]!=s[size--])
                        {
                              return 0;
                        }
               }
          return 1;
    }
    int removePalindromeSub(string s) {
        
                          if(s.size()==0)
                          {
                              return 0;
                          }
                       int n=isPalindrome(s);
                       if(n)
                           return 1;
                       vector<int> v(s.size(),0);
                         for(int i=0;i<s.size();i++)
                         {
                             v[s[i]-97]++;
                         }
                        int count1=0;
                       for(int i=0;i<2;i++)
                       {
                              if(v[i]!=0)
                              {
                                   count1++;
                                
                              }
                       }
                        if(count1==2)
                        {
                              return 2;
                        }else return 1;
        
    }
};